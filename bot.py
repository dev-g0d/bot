import discord
from discord.ext import commands
import requests
import re
import os
import threading
from flask import Flask # ‡∏ô‡∏≥‡πÄ‡∏Ç‡πâ‡∏≤ Flask

# --- Flask Keep-Alive Setup ---
# ‡∏™‡∏£‡πâ‡∏≤‡∏á Flask App ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡∏ï‡πà‡∏≠ Health Check ‡∏Ç‡∏≠‡∏á Render
web_app = Flask('') 

@web_app.route('/')
def home():
    """‡∏´‡∏ô‡πâ‡∏≤ Home ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Health Check ‡∏Ç‡∏≠‡∏á Render"""
    return "Discord Bot is running and ready to serve!"

def run_web_server():
    """‡∏£‡∏±‡∏ô Web Server ‡πÉ‡∏ô Thread ‡πÅ‡∏¢‡∏Å"""
    # Render ‡∏°‡∏±‡∏Å‡∏à‡∏∞‡πÉ‡∏ä‡πâ Environment Variable ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏Å‡∏≥‡∏´‡∏ô‡∏î Port ‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á Listen
    port = int(os.environ.get("PORT", 8080))
    web_app.run(host='0.0.0.0', port=port)

def keep_alive():
    """‡πÄ‡∏£‡∏¥‡πà‡∏° Thread ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Web Server"""
    t = threading.Thread(target=run_web_server)
    t.start()

# --- Configuration ---
DISCORD_BOT_TOKEN = os.environ.get("DISCORD_BOT_TOKEN", "YOUR_BOT_TOKEN_HERE") 
# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î ID ‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
# ‡∏´‡∏≤‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏£‡∏±‡∏ô‡∏ö‡∏≠‡∏ó‡πÉ‡∏ô‡∏ó‡∏∏‡∏Å‡∏´‡πâ‡∏≠‡∏á ‡πÉ‡∏´‡πâ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô None ‡∏´‡∏£‡∏∑‡∏≠‡∏•‡∏ö‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ô‡∏µ‡πâ‡∏≠‡∏≠‡∏Å
ALLOWED_CHANNEL_ID = 1098314625646329966  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô ID ‡∏ä‡πà‡∏≠‡∏á‡∏à‡∏£‡∏¥‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì

# URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏ü‡∏•‡πå
DEVGOD_BASE_URL = "https://devg0d.pythonanywhere.com/app_request/" 
STEAM_API_URL = "https://store.steampowered.com/api/appdetails?appids="

intents = discord.Intents.default()
intents.messages = True
intents.message_content = True
intents.guilds = True

bot = commands.Bot(command_prefix='!', intents=intents)

# --- Helper Functions (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°) ---
def extract_app_id(message_content):
    """‡∏î‡∏∂‡∏á App ID ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏õ‡πâ‡∏≠‡∏ô (‡πÄ‡∏•‡∏Ç‡∏•‡πâ‡∏ß‡∏ô ‡∏´‡∏£‡∏∑‡∏≠ URL Steam/SteamDB)"""
    if message_content.isdigit():
        return message_content
    match = re.search(r'(?:steamdb\.info\/app\/|store\.steampowered\.com\/app\/)(\d+)', message_content)
    if match:
        return match.group(1)
    return None

def get_steam_info(app_id):
    """‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏°‡∏à‡∏≤‡∏Å Steam API"""
    try:
        url = f"{STEAM_API_URL}{app_id}&cc=th&l=th"
        response = requests.get(url)
        response.raise_for_status()
        data = response.json()
        
        if data and data[app_id]['success']:
            details = data[app_id]['data']
            name = details.get('name', 'N/A')
            header_image = details.get('header_image', 'N/A')
            dlc_count = len(details.get('dlc', []))
            
            return {
                'name': name,
                'image': header_image,
                'dlc_count': dlc_count,
            }
        return None
    except requests.RequestException:
        return None

def check_file_status(app_id):
    """‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á URL ‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå devg0d ‡πÅ‡∏•‡∏∞‡∏ï‡∏≤‡∏°‡∏´‡∏≤ URL 200 OK"""
    check_url = f"{DEVGOD_BASE_URL}{app_id}"
    
    try:
        # requests ‡∏à‡∏∞‡∏ï‡∏≤‡∏° Redirect ‡πÉ‡∏´‡πâ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡πÅ‡∏•‡∏∞ response.url ‡∏à‡∏∞‡πÄ‡∏õ‡πá‡∏ô URL ‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á 200 OK
        response = requests.get(check_url, allow_redirects=True, timeout=10)
        
        if response.status_code == 200 and response.history:
            # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£ Redirect ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô (response.history) ‡πÅ‡∏•‡∏∞‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏Ñ‡∏∑‡∏≠ 200
            return response.url
        
        # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£ Redirect ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô 200 ‡∏ñ‡∏∑‡∏≠‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
        return None

    except requests.exceptions.RequestException:
        return None


# --- Discord Events ---

@bot.event
async def on_ready():
    print(f'Logged in as {bot.user} (ID: {bot.user.id})')
    print('Bot is ready!')

@bot.event
async def on_message(message):
    if message.author.bot:
        return

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Channel ID (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô None ‡πÉ‡∏ô‡∏≠‡∏ô‡∏≤‡∏Ñ‡∏ï‡πÑ‡∏î‡πâ)
    if ALLOWED_CHANNEL_ID and message.channel.id != ALLOWED_CHANNEL_ID:
        return

    app_id = extract_app_id(message.content)

    if app_id:
        # --- ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ---
        steam_data = get_steam_info(app_id)
        file_url_200 = check_file_status(app_id)
        
        embed = discord.Embed(
            title=f"üîé ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Steam App ID: {app_id}",
            color=0x1b2838 
        )
        
        if steam_data:
            embed.add_field(name="‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏°", value=steam_data['name'], inline=False)
            embed.add_field(name="DLCs", value=f"{steam_data['dlc_count']} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£", inline=True)
            embed.add_field(name="‡∏•‡∏¥‡∏á‡∏Å‡πå Steam Store", value=f"[‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà](https://store.steampowered.com/app/{app_id}/)", inline=True)
            if steam_data['image'] != 'N/A':
                embed.set_thumbnail(url=steam_data['image'])
        else:
            embed.add_field(name="‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞", value="‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏°‡∏ö‡∏ô Steam", inline=False)
            
        if file_url_200:
            embed.add_field(
                name="üîó ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î (‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ 200 OK)", 
                value=f"```\n{file_url_200}\n```\n(URL ‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô URL ‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏•‡πâ‡∏ß)", 
                inline=False
            )
        else:
            embed.add_field(
                name="üîó ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î (‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞)", 
                value=f"‡πÑ‡∏°‡πà‡∏û‡∏ö URL ‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ 200 OK ‡∏ö‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå `{DEVGOD_BASE_URL}` (‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ 404, 500 ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå)", 
                inline=False
            )

        await message.channel.send(embed=embed)
        
    else:
        # --- ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á ---
        try:
            await message.delete()
            print(f"Deleted message from {message.author}: '{message.content}'")
        except discord.Forbidden:
            print(f"Error: Bot does not have permission to delete messages in channel {message.channel.id}. Check bot permissions.")
        except Exception as e:
            print(f"An unexpected error occurred while deleting message: {e}")
            
# --- Main Execution ---

if __name__ == '__main__':
    # 1. ‡πÄ‡∏£‡∏¥‡πà‡∏° Web Server Keep-Alive ‡πÉ‡∏ô Thread ‡πÅ‡∏¢‡∏Å
    keep_alive() 

    # 2. ‡∏£‡∏±‡∏ô Discord Bot ‡πÉ‡∏ô Main Thread
    try:
        bot.run(DISCORD_BOT_TOKEN)
    except discord.errors.LoginFailure:
        print("FATAL ERROR: Invalid Discord Bot Token. Please check your DISCORD_BOT_TOKEN.")
    except Exception as e:
        print(f"An error occurred while running the bot: {e}")
