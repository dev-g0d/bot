import discord
from discord.ext import commands
import requests
import re
import os
import threading
from flask import Flask 

# --- 1. Flask Keep-Alive Setup ---
# ‡∏™‡∏£‡πâ‡∏≤‡∏á Flask App ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡∏ï‡πà‡∏≠ Health Check ‡∏Ç‡∏≠‡∏á Render
web_app = Flask('') 

@web_app.route('/')
def home():
    """Endpoint ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Health Check ‡∏Ç‡∏≠‡∏á Render"""
    return "Discord Bot is running and ready to serve!"

def run_web_server():
    """‡∏£‡∏±‡∏ô Web Server ‡πÉ‡∏ô Thread ‡πÅ‡∏¢‡∏Å ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ use_reloader=False ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô KeyError"""
    # ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤ PORT ‡∏à‡∏≤‡∏Å Environment Variable ‡∏Ç‡∏≠‡∏á Render (‡∏ñ‡πâ‡∏≤‡∏°‡∏µ) ‡∏´‡∏£‡∏∑‡∏≠‡πÉ‡∏ä‡πâ 8080 ‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡πà‡∏≤ default
    port = int(os.environ.get("PORT", 8080))
    # ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà use_reloader=False ‡πÅ‡∏•‡∏∞ debug=False ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£ Fork Process ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏î KeyError
    web_app.run(host='0.0.0.0', port=port, debug=False, use_reloader=False)

def keep_alive():
    """‡πÄ‡∏£‡∏¥‡πà‡∏° Thread ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Web Server ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ Render ‡∏õ‡∏¥‡∏î Worker"""
    t = threading.Thread(target=run_web_server)
    t.start()
    
# --- 2. Configuration ---
# ‡∏î‡∏∂‡∏á Discord Token ‡∏à‡∏≤‡∏Å Environment Variables ‡∏ö‡∏ô Render
# **‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç:** ‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ DISCORD_BOT_TOKEN ‡πÉ‡∏ô Environment Variables ‡∏Ç‡∏≠‡∏á Render
DISCORD_BOT_TOKEN = os.environ.get("DISCORD_BOT_TOKEN", "YOUR_BOT_TOKEN_HERE") 

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î ID ‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
# **‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç:** ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏•‡∏Ç‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô ID ‡∏ä‡πà‡∏≠‡∏á‡∏à‡∏£‡∏¥‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
ALLOWED_CHANNEL_ID = 1098314625646329966  

# URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÑ‡∏ü‡∏•‡πå‡∏ö‡∏ô‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå devg0d
DEVGOD_BASE_URL = "https://devg0d.pythonanywhere.com/app_request/" 
STEAM_API_URL = "https://store.steampowered.com/api/appdetails?appids="

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Intents ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
intents = discord.Intents.default()
intents.messages = True
intents.message_content = True # ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ô Developer Portal (‡πÄ‡∏à‡∏ï‡∏ô‡∏≤‡∏Ç‡∏≠‡∏á‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°)
intents.guilds = True
# intents.members = True ‡∏ñ‡∏π‡∏Å‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ô Discord Developer Portal (‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ï‡∏±‡πâ‡∏á‡πÉ‡∏à‡∏Ç‡∏≠‡∏á‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå) ‡πÅ‡∏•‡πâ‡∏ß

bot = commands.Bot(command_prefix='!', intents=intents)

# --- 3. Helper Functions ---
def extract_app_id(message_content):
    """‡∏î‡∏∂‡∏á App ID ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏õ‡πâ‡∏≠‡∏ô (‡πÄ‡∏•‡∏Ç‡∏•‡πâ‡∏ß‡∏ô ‡∏´‡∏£‡∏∑‡∏≠ URL Steam/SteamDB)"""
    if message_content.isdigit():
        return message_content
    # Regex ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏ö‡πÄ‡∏•‡∏Ç App ID ‡∏à‡∏≤‡∏Å URL ‡∏ó‡∏±‡πâ‡∏á SteamDB ‡πÅ‡∏•‡∏∞ Steam Store
    match = re.search(r'(?:steamdb\.info\/app\/|store\.steampowered\.com\/app\/)(\d+)', message_content)
    if match:
        return match.group(1)
    return None

def get_steam_info(app_id):
    """‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏°‡∏à‡∏≤‡∏Å Steam API"""
    try:
        url = f"{STEAM_API_URL}{app_id}&cc=th&l=th"
        response = requests.get(url, timeout=5)
        response.raise_for_status()
        data = response.json()
        
        if data and data[app_id]['success']:
            details = data[app_id]['data']
            name = details.get('name', 'N/A')
            header_image = details.get('header_image', 'N/A')
            # ‡∏ô‡∏±‡∏ö‡∏à‡∏≥‡∏ô‡∏ß‡∏ô DLCs
            dlc_count = len(details.get('dlc', []))
            
            return {
                'name': name,
                'image': header_image,
                'dlc_count': dlc_count,
            }
        return None
    except requests.RequestException:
        return None

def check_file_status(app_id):
    """
    ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Ç‡∏≠‡∏á URL ‡∏à‡∏≤‡∏Å‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå devg0d ‡πÅ‡∏•‡∏∞‡∏ï‡∏≤‡∏°‡∏´‡∏≤ URL ‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö
    """
    check_url = f"{DEVGOD_BASE_URL}{app_id}"
    
    try:
        # requests.get ‡∏û‡∏£‡πâ‡∏≠‡∏° allow_redirects=True ‡∏à‡∏∞‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏° 302 ‡πÑ‡∏õ‡∏à‡∏ô‡πÄ‡∏à‡∏≠ URL ‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢
        response = requests.get(check_url, allow_redirects=True, timeout=10)
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£ Redirect ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà (‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡∏ß‡πà‡∏≤‡∏°‡∏±‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡∏≤‡∏£‡∏Ç‡∏≠ token)
        # ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ history (‡∏°‡∏µ‡∏Å‡∏≤‡∏£ Redirect) ‡πÉ‡∏´‡πâ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ URL ‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏ó‡∏µ‡πà‡∏ï‡∏≤‡∏°‡πÑ‡∏õ
        if response.history:
            return response.url
        else:
            # ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ history ‡∏´‡∏£‡∏∑‡∏≠‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ 404/500/‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á None
            return None

    except requests.exceptions.RequestException:
        return None


# --- 4. Discord Events ---

@bot.event
async def on_ready():
    print(f'Logged in as {bot.user} (ID: {bot.user.id})')
    print('Bot is ready and running!')

@bot.event
async def on_message(message):
    if message.author.bot:
        return

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Channel ID
    if ALLOWED_CHANNEL_ID and message.channel.id != ALLOWED_CHANNEL_ID:
        return

    app_id = extract_app_id(message.content)

    if app_id:
        # --- ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ---
        
        # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î
        await message.channel.typing()

        steam_data = get_steam_info(app_id)
        file_url_200 = check_file_status(app_id)
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á Embed
        embed = discord.Embed(
            title=f"üîé ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Steam App ID: {app_id}",
            color=0x1b2838 # ‡∏™‡∏µ Steam Dark Blue
        )
        
        # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏°
        if steam_data:
            embed.add_field(name="‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏°", value=steam_data['name'], inline=False)
            embed.add_field(name="DLCs", value=f"{steam_data['dlc_count']} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£", inline=True)
            embed.add_field(name="‡∏•‡∏¥‡∏á‡∏Å‡πå Steam Store", value=f"[‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà](https://store.steampowered.com/app/{app_id}/)", inline=True)
            if steam_data['image'] != 'N/A':
                embed.set_thumbnail(url=steam_data['image'])
        else:
            embed.add_field(name="‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Steam", value="‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏°‡∏ö‡∏ô Steam", inline=False)
            
        # ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î
        if file_url_200:
            embed.add_field(
                name="üîó ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î (URL ‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö)", 
                value=f"```\n{file_url_200}\n```\n(URL ‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏ï‡∏≤‡∏° Redirect ‡πÑ‡∏õ)", 
                inline=False
            )
        else:
            embed.add_field(
                name="üîó ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î (‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞)", 
                value=f"‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏° URL ‡∏à‡∏≤‡∏Å `{DEVGOD_BASE_URL}` ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡πÑ‡∏î‡πâ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", 
                inline=False
            )

        await message.channel.send(embed=embed)
        
    else:
        # --- ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á ---
        try:
            # ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà App ID ‡∏´‡∏£‡∏∑‡∏≠ URL ‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
            await message.delete()
            # ‡∏û‡∏¥‡∏°‡∏û‡πå log ‡πÅ‡∏à‡πâ‡∏á‡∏ß‡πà‡∏≤‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏•‡πâ‡∏ß
            # print(f"Deleted irrelevant message from {message.author}: '{message.content}'") 
        except discord.Forbidden:
            # ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ö‡∏≠‡∏ó‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°
            print(f"Error: Bot lacks permission to delete messages in channel {message.channel.id}.")
        except Exception as e:
            # ‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏≠‡∏∑‡πà‡∏ô‡πÜ
            print(f"An unexpected error occurred while deleting message: {e}")
            
# --- 5. Main Execution ---

if __name__ == '__main__':
    # 1. ‡πÄ‡∏£‡∏¥‡πà‡∏° Web Server Keep-Alive ‡πÉ‡∏ô Thread ‡πÅ‡∏¢‡∏Å
    keep_alive() 

    # 2. ‡∏£‡∏±‡∏ô Discord Bot ‡πÉ‡∏ô Main Thread
    try:
        if not DISCORD_BOT_TOKEN or DISCORD_BOT_TOKEN == "YOUR_BOT_TOKEN_HERE":
            print("FATAL ERROR: Please set the DISCORD_BOT_TOKEN environment variable or change the default value.")
        else:
            bot.run(DISCORD_BOT_TOKEN)
    except discord.errors.LoginFailure:
        print("FATAL ERROR: Invalid Discord Bot Token. Please check your token.")
    except Exception as e:
        print(f"An error occurred while running the bot: {e}")
