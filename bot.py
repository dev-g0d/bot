import discord
from discord.ext import commands
import requests
import re
import os
import threading
from flask import Flask 
import json # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£ import json ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ response

# --- 1. Flask Keep-Alive Setup ---
# ‡∏™‡∏£‡πâ‡∏≤‡∏á Flask App ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏≠‡∏ö‡∏™‡∏ô‡∏≠‡∏á‡∏ï‡πà‡∏≠ Health Check ‡∏Ç‡∏≠‡∏á Render
web_app = Flask('') 

@web_app.route('/')
def home():
    """Endpoint ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Health Check ‡∏Ç‡∏≠‡∏á Render"""
    return "Discord Bot is running and ready to serve!"

def run_web_server():
    """‡∏£‡∏±‡∏ô Web Server ‡πÉ‡∏ô Thread ‡πÅ‡∏¢‡∏Å ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ use_reloader=False ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô KeyError"""
    port = int(os.environ.get("PORT", 8080))
    # ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏™‡πà use_reloader=False ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£ Fork Process ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡πÄ‡∏Å‡∏¥‡∏î KeyError
    web_app.run(host='0.0.0.0', port=port, debug=False, use_reloader=False)

def keep_alive():
    """‡πÄ‡∏£‡∏¥‡πà‡∏° Thread ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Web Server ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ Render ‡∏õ‡∏¥‡∏î Worker"""
    t = threading.Thread(target=run_web_server)
    t.start()
    
# --- 2. Configuration & API Endpoints ---
# ‡∏î‡∏∂‡∏á Discord Token ‡∏à‡∏≤‡∏Å Environment Variables ‡∏ö‡∏ô Render
DISCORD_BOT_TOKEN = os.environ.get("DISCORD_BOT_TOKEN", "YOUR_BOT_TOKEN_HERE") 

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î ID ‡∏´‡πâ‡∏≠‡∏á‡∏ó‡∏µ‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡∏ö‡∏≠‡∏ó‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
# **‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç:** ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏•‡∏Ç‡∏ô‡∏µ‡πâ‡πÄ‡∏õ‡πá‡∏ô ID ‡∏ä‡πà‡∏≠‡∏á‡∏à‡∏£‡∏¥‡∏á‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
ALLOWED_CHANNEL_ID = 1098314625646329966  

# URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ (Gatekeeper)
MELLY_BASE_URL = "https://mellyiscoolaf.pythonanywhere.com/" 

# URL ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á URL ‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á (‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏à‡∏≤‡∏Å Request ‡∏ô‡∏µ‡πâ)
DEVGOD_BASE_URL = "https://devg0d.pythonanywhere.com/app_request/"

# ‡πÉ‡∏ä‡πâ API ‡∏ô‡∏µ‡πâ‡πÅ‡∏ó‡∏ô Steam Store ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÅ‡∏°‡πà‡∏ô‡∏¢‡∏≥‡∏Å‡∏ß‡πà‡∏≤ (‡∏£‡∏ß‡∏° DLCs)
STEAMCMD_API_URL = "https://api.steamcmd.net/v1/info/"

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ Intents ‡∏ó‡∏µ‡πà‡∏à‡∏≥‡πÄ‡∏õ‡πá‡∏ô
intents = discord.Intents.default()
intents.messages = True
intents.message_content = True # ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡πÉ‡∏ô Developer Portal
intents.guilds = True

bot = commands.Bot(command_prefix='!', intents=intents)

# --- 3. Helper Functions ---
def extract_app_id(message_content):
    """‡∏î‡∏∂‡∏á App ID ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏õ‡πâ‡∏≠‡∏ô (‡πÄ‡∏•‡∏Ç‡∏•‡πâ‡∏ß‡∏ô ‡∏´‡∏£‡∏∑‡∏≠ URL Steam/SteamDB)"""
    if message_content.isdigit():
        return message_content
    # Regex ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏à‡∏±‡∏ö‡πÄ‡∏•‡∏Ç App ID ‡∏à‡∏≤‡∏Å URL ‡∏ó‡∏±‡πâ‡∏á SteamDB ‡πÅ‡∏•‡∏∞ Steam Store
    match = re.search(r'(?:steamdb\.info\/app\/|store\.steampowered\.com\/app\/)(\d+)', message_content)
    if match:
        return match.group(1)
    return None

def get_steam_info(app_id):
    """‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏°‡πÅ‡∏•‡∏∞‡∏ô‡∏±‡∏ö DLCs ‡∏à‡∏≤‡∏Å SteamCMD API"""
    try:
        url = f"{STEAMCMD_API_URL}{app_id}"
        response = requests.get(url, timeout=7)
        response.raise_for_status()
        data = response.json()
        
        # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ 'success' ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        if data and data.get('status') == 'success' and app_id in data['data']:
            app_data = data['data'][app_id]
            common = app_data.get('common', {})
            extended = app_data.get('extended', {})
            
            name = common.get('name', 'N/A')
            # ‡∏î‡∏∂‡∏á Header Image (‡∏ï‡πâ‡∏≠‡∏á‡πÅ‡∏õ‡∏•‡∏á‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô URL ‡∏ó‡∏µ‡πà‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÑ‡∏î‡πâ)
            header_image_hash = common.get('header_image', {}).get('english')
            # ‡∏Å‡∏≥‡∏´‡∏ô‡∏î URL ‡∏†‡∏≤‡∏û Header ‡∏Ç‡∏≠‡∏á Steam 
            header_image = f"https://cdn.akamai.steamstatic.com/steam/apps/{app_id}/{header_image_hash}" if header_image_hash else None
            
            # ‡∏ï‡∏£‡∏£‡∏Å‡∏∞‡∏Å‡∏≤‡∏£‡∏ô‡∏±‡∏ö DLCs 
            dlc_list_str = extended.get('listofdlc', '')
            dlc_items = [item for item in dlc_list_str.split(',') if item.strip()]
            dlc_count = len(dlc_items)
            
            return {
                'name': name,
                'image': header_image,
                'dlc_count': dlc_count,
            }
        return None
    except requests.RequestException as e:
        print(f"Error fetching SteamCMD info for {app_id}: {e}")
        return None

def check_file_status(app_id):
    """
    ‡∏Ç‡∏±‡πâ‡∏ô‡∏ï‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÅ‡∏•‡∏∞‡∏î‡∏∂‡∏á URL ‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á:
    1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ 200 OK ‡∏ó‡∏µ‡πà mellyiscoolaf/m/{app_id} (Gatekeeper)
    2. ‡∏ñ‡πâ‡∏≤ Gatekeeper ‡∏ú‡πà‡∏≤‡∏ô (‡πÑ‡∏î‡πâ 200) ‡∏à‡∏∂‡∏á‡∏à‡∏∞‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ Request ‡πÑ‡∏õ‡∏ó‡∏µ‡πà devg0d ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á URL ‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á
    3. ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ URL ‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡∏à‡∏≤‡∏Å devg0d ‡∏´‡∏≤‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡πÄ‡∏õ‡πá‡∏ô 200 OK
    """
    
    # --- 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Melly (Gatekeeper) ---
    melly_check_url = f"{MELLY_BASE_URL}{app_id}"
    try:
        # ‡πÉ‡∏ä‡πâ requests.head ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏£‡∏ß‡∏î‡πÄ‡∏£‡πá‡∏ß
        melly_response = requests.head(melly_check_url, allow_redirects=True, timeout=5)
        
        if melly_response.status_code != 200:
            print(f"Melly check failed for {app_id}. Status: {melly_response.status_code}")
            return None # Melly check ‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏ó‡∏≥‡∏ï‡πà‡∏≠
            
    except requests.exceptions.RequestException as e:
        print(f"Error checking Melly status for {app_id}: {e}")
        return None 
    
    # --- 2. Gatekeeper ‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß -> ‡∏ó‡∏≥‡∏Å‡∏≤‡∏£ Request Devg0d ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á URL ‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á ---
    devgod_request_url = f"{DEVGOD_BASE_URL}{app_id}"
    
    try:
        # ‡πÉ‡∏ä‡πâ requests.get ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡∏≤‡∏° Redirect ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÑ‡∏õ‡∏à‡∏ô‡∏ñ‡∏∂‡∏á URL ‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢
        devgod_response = requests.get(devgod_request_url, allow_redirects=True, timeout=10)
        
        # --- 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏Ç‡∏≠‡∏á Devg0d ‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ URL ---
        if devgod_response.status_code == 200:
            # ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤ URL ‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢ (‡∏ã‡∏∂‡πà‡∏á‡∏°‡∏≤‡∏à‡∏≤‡∏Å devg0d request)
            return devgod_response.url
        
        # ‡∏´‡∏≤‡∏Å‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢‡πÑ‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô 200 OK 
        print(f"Devg0d final status not 200 OK for {app_id}. Status: {devgod_response.status_code}")
        return None

    except requests.exceptions.RequestException as e:
        print(f"Error fetching final Devg0d URL for {app_id}: {e}")
        return None


# --- 4. Discord Events ---

@bot.event
async def on_ready():
    print(f'Logged in as {bot.user} (ID: {bot.user.id})')
    print('Bot is ready and running!')

@bot.event
async def on_message(message):
    if message.author.bot:
        return

    # ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö Channel ID (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏à‡∏≥‡∏Å‡∏±‡∏î‡∏ä‡πà‡∏≠‡∏á ‡πÉ‡∏´‡πâ‡πÄ‡∏≠‡∏≤ comment ‡∏î‡πâ‡∏≤‡∏ô‡∏•‡πà‡∏≤‡∏á‡∏≠‡∏≠‡∏Å)
    # if ALLOWED_CHANNEL_ID and message.channel.id != ALLOWED_CHANNEL_ID:
    #     return

    app_id = extract_app_id(message.content)

    if app_id:
        # --- ‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ---
        
        # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î
        await message.channel.typing()

        steam_data = get_steam_info(app_id)
        # ‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô check_file_status ‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡πÅ‡∏•‡πâ‡∏ß
        file_url_200 = check_file_status(app_id) 
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á Embed
        embed = discord.Embed(
            title=f"üîé ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Steam App ID: {app_id}",
            color=0x1b2838 # ‡∏™‡∏µ Steam Dark Blue
        )
        
        # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏°
        if steam_data:
            embed.add_field(name="‡∏ä‡∏∑‡πà‡∏≠‡πÄ‡∏Å‡∏°", value=steam_data['name'], inline=False)
            embed.add_field(name="DLCs (‡∏à‡∏≤‡∏Å SteamCMD)", value=f"‡∏û‡∏ö **{steam_data['dlc_count']}** ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£", inline=True)
            embed.add_field(name="‡∏•‡∏¥‡∏á‡∏Å‡πå Steam Store", value=f"[‡∏Ñ‡∏•‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏ô‡∏µ‡πà](https://store.steampowered.com/app/{app_id}/)", inline=True)
            if steam_data['image']:
                embed.set_thumbnail(url=steam_data['image'])
        else:
            embed.add_field(name="‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ Steam", value="‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏Å‡∏°‡∏ö‡∏ô Steam", inline=False)
            
        # ‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î (‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞ 200 OK ‡∏à‡∏≤‡∏Å Devg0d Request)
        if file_url_200:
            # ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡πÄ‡∏õ‡πá‡∏ô Markdown Link [‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‚Üó] ‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏£‡πâ‡∏≠‡∏á‡∏Ç‡∏≠
            embed.add_field(
                name="üîó ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÅ‡∏•‡∏∞‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î", 
                value=f"‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: **‚úÖ ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î**\n[**‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î‚Üó**]({file_url_200})", 
                inline=False
            )
        else:
            # ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏ß‡πà‡∏≤‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö 200 OK ‡∏à‡∏≤‡∏Å Devg0d Request (‡πÅ‡∏°‡πâ Melly ‡∏à‡∏∞‡∏ú‡πà‡∏≤‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà‡∏ú‡πà‡∏≤‡∏ô‡∏Å‡πá‡∏ï‡∏≤‡∏°)
            embed.add_field(
                name="üîó ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÅ‡∏•‡∏∞‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏î‡∏≤‡∏ß‡∏ô‡πå‡πÇ‡∏´‡∏•‡∏î", 
                value="‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞: **‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö‡πÑ‡∏ü‡∏•‡πå/‡∏•‡∏¥‡∏á‡∏Å‡πå‡πÑ‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏°**", 
                inline=False
            )
        
        await message.channel.send(embed=embed)
        
    else:
        # --- ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á ---
        # ‡∏Å‡∏≤‡∏£‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡∏ñ‡∏π‡∏Å‡∏õ‡∏¥‡∏î‡πÑ‡∏ß‡πâ‡∏ï‡∏≤‡∏°‡πÇ‡∏Ñ‡πâ‡∏î‡πÄ‡∏î‡∏¥‡∏° ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ó‡∏î‡∏™‡∏≠‡∏ö‡πÑ‡∏î‡πâ‡∏á‡πà‡∏≤‡∏¢
        pass
            
# --- 5. Main Execution ---

if __name__ == '__main__':
    # 1. ‡πÄ‡∏£‡∏¥‡πà‡∏° Web Server Keep-Alive ‡πÉ‡∏ô Thread ‡πÅ‡∏¢‡∏Å
    keep_alive() 

    # 2. ‡∏£‡∏±‡∏ô Discord Bot ‡πÉ‡∏ô Main Thread
    try:
        if not DISCORD_BOT_TOKEN or DISCORD_BOT_TOKEN == "YOUR_BOT_TOKEN_HERE":
            print("FATAL ERROR: Please set the DISCORD_BOT_TOKEN environment variable or change the default value.")
        else:
            bot.run(DISCORD_BOT_TOKEN)
    except discord.errors.LoginFailure:
        print("FATAL ERROR: Invalid Discord Bot Token. Please check your token.")
    except Exception as e:
        print(f"An error occurred while running the bot: {e}")
